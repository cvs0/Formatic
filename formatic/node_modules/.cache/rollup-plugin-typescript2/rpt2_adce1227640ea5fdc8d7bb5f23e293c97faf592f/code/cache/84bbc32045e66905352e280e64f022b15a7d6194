{"code":"export var Text = function (initialValue) {\n    if (initialValue === void 0) { initialValue = \"\"; }\n    var value = initialValue;\n    return {\n        value: value,\n        onChange: function (event) {\n            value = event.target.value;\n        },\n    };\n};\nexport var Toggle = function (initialValue) {\n    if (initialValue === void 0) { initialValue = false; }\n    var value = initialValue;\n    return {\n        value: value,\n        onChange: function (newValue) {\n            value = newValue;\n        },\n    };\n};\nexport var List = function (spec) {\n    var items = [];\n    return {\n        items: items,\n        addItem: function () {\n            var newItem = create(spec);\n            items.push(newItem);\n            return items;\n        },\n        removeItem: function (index) {\n            items.splice(index, 1);\n            return items;\n        },\n    };\n};\nexport var Group = function (spec) {\n    return create(spec);\n};\nvar create = function (spec) {\n    var state = {};\n    for (var key in spec) {\n        state[key] = typeof spec[key] === \"function\" ? spec[key]() : spec[key];\n    }\n    return state;\n};\n//# sourceMappingURL=fields.js.map","references":[],"map":"{\"version\":3,\"file\":\"fields.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/fields.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,YAAyB;IAAzB,6BAAA,EAAA,iBAAyB;IAC5C,IAAI,KAAK,GAAW,YAAY,CAAC;IACjC,OAAO;QACL,KAAK,OAAA;QACL,QAAQ,EAAE,UAAC,KAA0C;YACnD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,YAA6B;IAA7B,6BAAA,EAAA,oBAA6B;IAClD,IAAI,KAAK,GAAY,YAAY,CAAC;IAClC,OAAO;QACL,KAAK,OAAA;QACL,QAAQ,EAAE,UAAC,QAAiB;YAC1B,KAAK,GAAG,QAAQ,CAAC;QACnB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,IAAI,GAAG,UAClB,IAA6B;IAE7B,IAAM,KAAK,GAAQ,EAAE,CAAC;IACtB,OAAO;QACL,KAAK,OAAA;QACL,OAAO,EAAE;YACP,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,UAAU,EAAE,UAAC,KAAa;YACxB,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACvB,OAAO,KAAK,CAAC;QACf,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,KAAK,GAAG,UACnB,IAA6B;IAE7B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACtB,CAAC,CAAC;AAEF,IAAM,MAAM,GAAG,UACb,IAA6B;IAE7B,IAAM,KAAK,GAAwB,EAAE,CAAC;IACtC,KAAK,IAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzE,CAAC;IACD,OAAO,KAAU,CAAC;AACpB,CAAC,CAAC\"}","dts":{"name":"C:/Users/Brody/Documents/GitHub/Formatic/formatic/node_modules/.cache/rollup-plugin-typescript2/placeholder/fields.d.ts","writeByteOrderMark":false,"text":"export declare const Text: (initialValue?: string) => {\n    value: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\nexport declare const Toggle: (initialValue?: boolean) => {\n    value: boolean;\n    onChange: (newValue: boolean) => void;\n};\nexport declare const List: <T extends Record<string, any>>(spec: Record<string, () => T>) => {\n    items: T[];\n    addItem: () => T[];\n    removeItem: (index: number) => T[];\n};\nexport declare const Group: <T extends Record<string, any>>(spec: Record<string, () => T>) => T;\n"}}
